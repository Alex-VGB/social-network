{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileDescription.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDescription.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDescription","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","Preloader","className","s","mainProfileBlock","imgBlock","src","photos","large","userPhoto","mainPhoto","alt","isOwner","fileBtn","type","target","files","length","savePhoto","descriptionBlock","Post","item","message","likeCount","MyPosts","postElements","posts","reverse","map","p","likesCount","createRef","postBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.63f1f638.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'./login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfileBlock\":\"ProfileInfo_mainProfileBlock__31kJl\",\"imgBlock\":\"ProfileInfo_imgBlock__1sxK-\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1jZDV\",\"mainPhoto\":\"ProfileInfo_mainPhoto__Z9wyD\",\"fileBtn\":\"ProfileInfo_fileBtn__1Gtlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileDescription_descriptionBlock__3Ctee\",\"mainPhoto\":\"ProfileDescription_mainPhoto__3iXwW\",\"fileBtn\":\"ProfileDescription_fileBtn__1kLKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__FgH-q\",\"posts\":\"MyPosts_posts__1eRFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__iEFF-\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"===\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deActivateEditMode}\r\n                       value={status}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileDescription.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileDescription = (props) => {\r\ndebugger\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                Full Name: {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                looking for a job: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n            { props.profile.lookingForAJob &&\r\n                <div>\r\n                    My professional skills : {props.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                About Me: {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                looking for a job: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n\r\n            <ProfileStatusWithHooks status={props.status}\r\n                                    updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDescription;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDescription from \"./ProfileDescription\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainProfileBlock}>\r\n            <div className={s.imgBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"\"/>\r\n                {props.isOwner && <input className={s.fileBtn} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileDescription status={props.status}\r\n                                    updateStatus={props.updateStatus}\r\n                                    profile={props.profile}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n      <span>{props.message}</span>\r\n          <div>\r\n        <span>Like: {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nclass MyPosts extends React.Component {\r\n    render() {\r\n        let postElements =\r\n            [...this.props.posts]\r\n                .reverse()\r\n                .map(p => <Post message={p.message} likeCount={p.likesCount}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText);\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={s.postBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder={\"Send Post\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}