{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileDataForm.module.css","components/Profile/ProfileInfo/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","saveBtn","style","formSummaryError","containerEdit","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","Contact","contactTitle","contactValue","aboutRight","ProfileData","isOwner","goToEditMode","btnEdit","onClick","name","fullName","line","sectionAbout","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","saveProfile","Preloader","mainProfileBlock","imgBlock","src","photos","large","userPhoto","mainPhoto","fileBtn","target","files","length","descriptionBlock","initialValues","formData","then","Post","item","textMain","message","likeCount","MyPosts","postElements","posts","reverse","p","id","likesCount","createRef","postBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","postText","Field","component","placeholder","validate","required","addPostBtn","MyPostsContainer","compose","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/3.9effc828.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'./login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfileBlock\":\"ProfileInfo_mainProfileBlock__31kJl\",\"imgBlock\":\"ProfileInfo_imgBlock__1sxK-\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1jZDV\",\"mainPhoto\":\"ProfileInfo_mainPhoto__Z9wyD\",\"fileBtn\":\"ProfileInfo_fileBtn__1Gtlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerEdit\":\"ProfileDataForm_containerEdit__3-Gcn\",\"saveBtn\":\"ProfileDataForm_saveBtn__rbBiv\",\"contact\":\"ProfileDataForm_contact__3dESC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProfileData_name__2kpuj\",\"status\":\"ProfileData_status__Eb3nH\",\"line\":\"ProfileData_line__wuqBn\",\"sectionAbout\":\"ProfileData_sectionAbout__3j2Ri\",\"btnEdit\":\"ProfileData_btnEdit__1WX3h\",\"contact\":\"ProfileData_contact__1bwRx\",\"aboutRight\":\"ProfileData_aboutRight__dSIco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__FgH-q\",\"posts\":\"MyPosts_posts__1eRFb\",\"postText\":\"MyPosts_postText__2V3uW\",\"addPostBtn\":\"MyPosts_addPostBtn__vMdTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__iEFF-\",\"textMain\":\"Post_textMain__1CdrW\"};","import React from \"react\";\r\nimport s from './ProfileDataForm.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button className={s.saveBtn}>Save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div className={s.containerEdit}>\r\n            <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div className={s.containerEdit}>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div className={s.containerEdit}>\r\n            <b>My professional skills:</b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div className={s.containerEdit}>\r\n            <b>About me:</b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={`${s.contact} ${s.containerEdit}`}>\r\n                <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"===\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deActivateEditMode}\r\n                       value={status}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileData.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    return     <div>\r\n        {isOwner && <div className={s.btnEdit}><button onClick={goToEditMode}>Edit</button></div>}\r\n        <div className={s.name}>\r\n            {profile.fullName}\r\n        </div>\r\n        <div className={s.status}>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}\r\n                                    profile={profile}/>\r\n        </div>\r\n\r\n        <div className={s.line}></div>\r\n        <div className={s.sectionAbout}>\r\n            <span>About Me:</span> <span className={s.aboutRight}>{profile.aboutMe}</span>\r\n        </div>\r\n        <div className={s.sectionAbout}>\r\n            <span>Looking for a job:</span> <span className={s.aboutRight}>{profile.lookingForAJob ? \"YES\" : \"NO\"}</span>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div className={s.sectionAbout}>\r\n            <span>My skills:</span> <span className={s.aboutRight}>{profile.lookingForAJobDescription}</span>\r\n        </div>\r\n        }\r\n        <div className={s.line}></div>\r\n        <div>\r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b> <span className={s.aboutRight}>{contactValue}</span></div>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.mainProfileBlock}>\r\n                <div className={s.imgBlock}>\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                    {isOwner && <input className={s.fileBtn} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <div className={s.descriptionBlock}>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}\r\n                                       status={status} updateStatus={updateStatus}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://social-network.samuraijs.com/activecontent/images/users/7723/user.jpg'/>\r\n            <div className={s.textMain}>\r\n            <span>{props.message}</span>\r\n            <span>Like: {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nclass MyPosts extends React.Component {\r\n    render() {\r\n        let postElements =\r\n            [...this.props.posts]\r\n                .reverse()\r\n                .map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText);\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.postBlock}>\r\n                    <h3>My posts</h3>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                </div>\r\n                <div className={`${s.postBlock} ${s.posts}`}>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.postText}>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder={\"What's new?\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.addPostBtn}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, getUserProfile} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass MyPostsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <MyPosts {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n) (MyPostsContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer profile={props.profile} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}