{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","Contact","contactTitle","contactValue","aboutRight","ProfileData","isOwner","goToEditMode","btnEdit","onClick","name","fullName","line","sectionAbout","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","saveProfile","Preloader","mainProfileBlock","imgBlock","src","photos","large","userPhoto","mainPhoto","fileBtn","target","files","length","descriptionBlock","initialValues","formData","then","Post","item","message","likeCount","MyPosts","postElements","posts","reverse","p","id","likesCount","createRef","postBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","postText","Field","component","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.d6742c8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'./login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfileBlock\":\"ProfileInfo_mainProfileBlock__31kJl\",\"imgBlock\":\"ProfileInfo_imgBlock__1sxK-\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1jZDV\",\"mainPhoto\":\"ProfileInfo_mainPhoto__Z9wyD\",\"fileBtn\":\"ProfileInfo_fileBtn__1Gtlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProfileData_name__2kpuj\",\"status\":\"ProfileData_status__Eb3nH\",\"line\":\"ProfileData_line__wuqBn\",\"sectionAbout\":\"ProfileData_sectionAbout__3j2Ri\",\"btnEdit\":\"ProfileData_btnEdit__1WX3h\",\"contact\":\"ProfileData_contact__1bwRx\",\"aboutRight\":\"ProfileData_aboutRight__dSIco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__FgH-q\",\"posts\":\"MyPosts_posts__1eRFb\",\"postText\":\"MyPosts_postText__2V3uW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__iEFF-\"};","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"===\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deActivateEditMode}\r\n                       value={status}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileData.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    return     <div>\r\n        {isOwner && <div className={s.btnEdit}><button onClick={goToEditMode}>Edit</button></div>}\r\n        <div className={s.name}>\r\n            {profile.fullName}\r\n        </div>\r\n        <div className={s.status}>\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}\r\n                                    profile={profile}/>\r\n        </div>\r\n\r\n        <div className={s.line}></div>\r\n        <div className={s.sectionAbout}>\r\n            <span>About Me:</span> <span className={s.aboutRight}>{profile.aboutMe}</span>\r\n        </div>\r\n        <div className={s.sectionAbout}>\r\n            <span>Looking for a job:</span> <span className={s.aboutRight}>{profile.lookingForAJob ? \"YES\" : \"NO\"}</span>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div className={s.sectionAbout}>\r\n            <span>My skills:</span> <span className={s.aboutRight}>{profile.lookingForAJobDescription}</span>\r\n        </div>\r\n        }\r\n        <div className={s.line}></div>\r\n        <div>\r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b> <span className={s.aboutRight}>{contactValue}</span></div>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.mainProfileBlock}>\r\n                <div className={s.imgBlock}>\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                    {isOwner && <input className={s.fileBtn} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <div className={s.descriptionBlock}>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}\r\n                                       status={status} updateStatus={updateStatus}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n      <span>{props.message}</span>\r\n          <div>\r\n        <span>Like: {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nclass MyPosts extends React.Component {\r\n    render() {\r\n        let postElements =\r\n            [...this.props.posts]\r\n                .reverse()\r\n                .map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText);\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.postBlock}>\r\n                    <h3>My posts</h3>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                </div>\r\n                <div className={`${s.postBlock} ${s.posts}`}>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.postText}>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder={\"What's new?\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}