{"version":3,"sources":["assets/images/user.png","api/api.js","redux/dialogs-reducer.js","components/Users/Users.module.css","components/common/Preloader/Preloader.module.css","assets/images/preloader.gif","assets/images/head_logo.svg","components/StartPage/StartPage.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","components/StartPage/StartPage.jsx","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Login/Login.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","console","log","s","Navbar","props","className","nav","item","activeClassName","active","to","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setToggleIsFetching","setToggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","totalCount","Header","header","logo","loginBlock","isAuth","colorLogin","loginBtn","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummeryError","length","stopSubmit","_error","formContainer","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","withSuspense","Suspense","fallback","StartPage","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SocialVkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","child","hasError","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","textMe","width","preloader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.562e1b3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.83427d44.png\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"93d495cc-3704-42d5-9748-343d03e9ff87\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photoFile );\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Alex'},\r\n        {id: 2, name: 'Gabi'},\r\n        {id: 3, name: 'Ola'},\r\n        {id: 4, name: 'Sasha'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Fine:)'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE :\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody} )\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__3Qt1R\",\"userPhoto\":\"Users_userPhoto__2E2gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"Preloader_width__8UnVW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.5fe0e55f.gif\";","module.exports = __webpack_public_path__ + \"static/media/head_logo.f2a12fb9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"StartPage_loginBlock__1YVXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2tfQH\",\"item\":\"Navbar_item__3Q1v1\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconsole.log(s);\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.active} to='/profile'>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink activeClassName={s.active} to='/dialogs'>Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink activeClassName={s.active} to='/users'>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map( u =>  {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 6,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const  setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const setToggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setToggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setToggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setToggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, setToggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, setToggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../../assets/images/head_logo.svg'\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={logo} />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div className={s.colorLogin}>{props.login}\r\n                <button className={s.loginBtn} onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: true\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n    ;\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"../common/FormsControls/FormsControls.module.css\"\r\nimport style from \"./Login.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"password\", null, Input, {type: \"checkbox\"}, \"Remember me\")}\r\n            <div>\r\n                <button className={style.loginBtn}>Login</button>\r\n            </div>\r\n            {(error) && <div className={s.formSummeryError}>{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.login}>\r\n            <h1>Login</h1>\r\n            <div className={style.formContainer}>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport s from './StartPage.module.css';\r\n\r\nconst StartPage = (props) => {\r\n    return (\r\n        <div className={s.loginBlock}>\r\n            <p>Hello! My name is Alex and I am building my own social network using React + Redux. <br/> Test account:</p>\r\n            <p><b>Login:</b> aleksander.kostiuk@gmail.com</p>\r\n            <p><b>Password:</b> alexalex1 </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage;","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport StartPage from \"./components/StartPage/StartPage\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)} />\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path=''\n                           render={() => <StartPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SocialVkApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SocialVkApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SocialVkApp from \"./App\";\n\nReactDOM.render(<SocialVkApp/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/>\r\n        <div className={s.textMe}>{text}</div>\r\n    </div>\r\n)","import React from \"react\";\r\nimport s from \"./Preloader.module.css\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <img className={s.width} src={preloader}/>\r\n    )\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1maxS\",\"error\":\"FormsControls_error__2e2c-\",\"formSummeryError\":\"FormsControls_formSummeryError__1PCuy\",\"textMe\":\"FormsControls_textMe__1dEYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BkTyt\",\"loginBlock\":\"Header_loginBlock__1Qy64\",\"colorLogin\":\"Header_colorLogin__1e08K\",\"loginBtn\":\"Header_loginBtn__12ytt\",\"mainPhotoSmall\":\"Header_mainPhotoSmall__1ciPC\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Paginator_selected__1k3BZ\",\"cursor\":\"Paginator_cursor__193oZ\",\"paginator\":\"Paginator_paginator__RYwfB\",\"pageNumber\":\"Paginator_pageNumber__2l-Yf\",\"selectedPage\":\"Paginator_selectedPage__1l6oR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__HBfyg\",\"formContainer\":\"Login_formContainer__Z29dk\",\"loginBtn\":\"Login_loginBtn__1VrTp\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello World!', likesCount: 10},\r\n        {id: 2, message: 'React + Redux', likesCount: 15},\r\n        {id: 3, message: 'Front End Developer', likesCount: 3}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST :\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case SET_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE :\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case DELETE_POST :\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        case SAVE_PHOTO_SUCCESS :\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n            if (response.data.resultCode === 0) {\r\n               dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}